name: Compile AHK to EXE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: write
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Download AutoHotkey
        run: Invoke-WebRequest -Uri "https://www.autohotkey.com/download/ahk.zip" -OutFile "ahk.zip"

      - name: Verify Download
        run: Get-Item -Path "ahk.zip"

      - name: Extract AutoHotkey
        run: Expand-Archive -Path "ahk.zip" -DestinationPath "AutoHotkey"

      - name: Verify Extraction
        run: Get-ChildItem -Path "AutoHotkey"

      - name: Compile AHK Script to Executable and Check Success
        run: |
          & "${{ github.workspace }}\AutoHotkey\Compiler\Ahk2Exe.exe" /in "${{ github.workspace }}\Jiggler.ahk" /out "${{ github.workspace }}\Jiggler.exe" /base "${{ github.workspace }}\AutoHotkey\Compiler\ANSI 32-bit.bin"
          if ($?) {
            Write-Host "Compilation reported success"
          } else {
            Write-Error "Compilation reported failure"
          }
          if (Test-Path "${{ github.workspace }}\Jiggler.exe") {
            Write-Host "Jiggler.exe exists."
          } else {
            Write-Host "Jiggler.exe does not exist."
          }

      - name: Verify Compilation
        run: Get-ChildItem -Recurse

      - name: Upload Compiled Executable
        uses: actions/upload-artifact@v2
        with:
          name: compiled-exe
          path: ${{ github.workspace }}/Jiggler.exe

  release:
    needs: build
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Generate timestamp
        id: time
        run: echo "::set-output name=timestamp::$(date +'%Y%m%d%H%M%S')"
        shell: bash

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: compiled-exe
          path: dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}-${{ github.run_number }}-${{ github.run_attempt }}-${{ steps.time.outputs.timestamp }}
          release_name: Release-${{ github.ref_name }}-${{ github.run_number }}-${{ github.run_attempt }}-${{ steps.time.outputs.timestamp }}
          draft: false
          prerelease: false
          body: "New release of Jiggler"
          

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/Jiggler.exe
          asset_name: Jiggler.exe
          asset_content_type: application/octet-stream
